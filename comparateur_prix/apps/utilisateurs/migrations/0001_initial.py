# Generated by Django 4.2.7 on 2025-09-24 07:53

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('produits', '0001_initial'),
        ('magasins', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('type_utilisateur', models.CharField(choices=[('particulier', 'Particulier'), ('professionnel', 'Professionnel'), ('administrateur', 'Administrateur')], default='particulier', max_length=20)),
                ('telephone', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{9,15}$')])),
                ('date_naissance', models.DateField(blank=True, null=True)),
                ('code_postal', models.CharField(blank=True, max_length=10)),
                ('ville', models.CharField(blank=True, max_length=100)),
                ('preferences', models.JSONField(blank=True, default=dict)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('derniere_connexion', models.DateTimeField(blank=True, null=True)),
                ('est_verifie', models.BooleanField(default=False)),
                ('nom_entreprise', models.CharField(blank=True, max_length=200)),
                ('siret', models.CharField(blank=True, max_length=14)),
                ('points_fidelite', models.PositiveIntegerField(default=0)),
                ('niveau_fidelite', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('date_dernier_achat', models.DateTimeField(blank=True, null=True)),
                ('total_achats', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('nombre_commandes', models.PositiveIntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
                'db_table': 'utilisateurs',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ProfilUtilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/%Y/%m/%d/')),
                ('bio', models.TextField(blank=True, max_length=500)),
                ('site_web', models.URLField(blank=True)),
                ('notifications_actives', models.BooleanField(default=True)),
                ('newsletter_abonnement', models.BooleanField(default=False)),
                ('preferences_recherche', models.JSONField(default=dict)),
                ('rayon_recherche_km', models.PositiveIntegerField(default=10)),
                ('alertes_remises', models.BooleanField(default=True)),
                ('categories_preferees_remises', models.ManyToManyField(blank=True, related_name='utilisateurs_interesses', to='produits.categorie')),
                ('magasins_preferes', models.ManyToManyField(blank=True, related_name='utilisateurs_preferant', to='magasins.magasin')),
                ('utilisateur', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profil', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profil utilisateur',
                'verbose_name_plural': 'Profils utilisateur',
                'db_table': 'profils_utilisateur',
            },
        ),
        migrations.CreateModel(
            name='Abonnement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_abonnement', models.CharField(choices=[('gratuit', 'Gratuit'), ('premium', 'Premium'), ('professionnel', 'Professionnel')], default='gratuit', max_length=20)),
                ('date_debut', models.DateTimeField(auto_now_add=True)),
                ('date_fin', models.DateTimeField()),
                ('est_actif', models.BooleanField(default=True)),
                ('remise_supplementaire', models.PositiveIntegerField(default=0)),
                ('livraison_gratuite', models.BooleanField(default=False)),
                ('acces_prioritaire', models.BooleanField(default=False)),
                ('utilisateur', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='abonnement', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Abonnement',
                'verbose_name_plural': 'Abonnements',
                'db_table': 'abonnements',
            },
        ),
        migrations.CreateModel(
            name='HistoriqueRemises',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prix_original', models.DecimalField(decimal_places=2, max_digits=10)),
                ('prix_remise', models.DecimalField(decimal_places=2, max_digits=10)),
                ('pourcentage_remise', models.DecimalField(decimal_places=2, max_digits=5)),
                ('montant_economise', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date_application', models.DateTimeField(auto_now_add=True)),
                ('type_remise', models.CharField(choices=[('fidelite', 'Fidélité'), ('abonnement', 'Abonnement'), ('promotion', 'Promotion'), ('combinee', 'Combinée')], max_length=20)),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='remises_appliquees', to='produits.produit')),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historique_remises', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Historique de remise',
                'verbose_name_plural': 'Historiques de remises',
                'db_table': 'historique_remises',
                'ordering': ['-date_application'],
                'indexes': [models.Index(fields=['utilisateur', 'date_application'], name='historique__utilisa_efa7d3_idx'), models.Index(fields=['produit', 'date_application'], name='historique__produit_0a805b_idx')],
            },
        ),
        migrations.CreateModel(
            name='HistoriqueConnexion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_connexion', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('reussi', models.BooleanField(default=True)),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historique_connexions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Historique de connexion',
                'verbose_name_plural': 'Historiques de connexion',
                'db_table': 'historique_connexions',
                'ordering': ['-date_connexion'],
                'indexes': [models.Index(fields=['utilisateur', 'date_connexion'], name='historique__utilisa_42e942_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='utilisateur',
            index=models.Index(fields=['email'], name='utilisateur_email_1cb90f_idx'),
        ),
        migrations.AddIndex(
            model_name='utilisateur',
            index=models.Index(fields=['type_utilisateur'], name='utilisateur_type_ut_840549_idx'),
        ),
        migrations.AddIndex(
            model_name='utilisateur',
            index=models.Index(fields=['date_creation'], name='utilisateur_date_cr_dacd5b_idx'),
        ),
        migrations.AddIndex(
            model_name='utilisateur',
            index=models.Index(fields=['code_postal', 'ville'], name='utilisateur_code_po_93208f_idx'),
        ),
        migrations.AddIndex(
            model_name='utilisateur',
            index=models.Index(fields=['points_fidelite'], name='utilisateur_points__98d6c1_idx'),
        ),
        migrations.AddIndex(
            model_name='utilisateur',
            index=models.Index(fields=['niveau_fidelite'], name='utilisateur_niveau__ba6522_idx'),
        ),
    ]
