# Generated by Django 4.2.7 on 2025-09-24 07:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('produits', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ModeleML',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, unique=True)),
                ('version', models.CharField(default='1.0.0', max_length=20)),
                ('type_modele', models.CharField(choices=[('recommandation', 'Système de Recommandation'), ('prediction_prix', 'Prédiction de Prix'), ('classification', 'Classification')], max_length=50)),
                ('chemin_fichier', models.CharField(max_length=255)),
                ('precision', models.FloatField(blank=True, null=True)),
                ('date_entrainement', models.DateTimeField(auto_now_add=True)),
                ('est_actif', models.BooleanField(default=True)),
                ('parametres', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'db_table': 'recommandations_modeles_ml',
                'ordering': ['-date_entrainement'],
            },
        ),
        migrations.CreateModel(
            name='HistoriqueRecommandation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score_confiance', models.FloatField(default=0.0, help_text='Score de confiance de la recommandation (0-1)')),
                ('algorithme_utilise', models.CharField(choices=[('contenu', 'Recommandation par Contenu'), ('collaboratif', 'Filtrage Collaboratif'), ('hybride', 'Modèle Hybride'), ('populaire', 'Produits Populaires')], max_length=50)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_visualisation', models.DateTimeField(blank=True, null=True)),
                ('a_ete_clique', models.BooleanField(default=False)),
                ('produit_recommande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommandations', to='produits.produit')),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommandations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'recommandations_historique',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='FeedbackRecommandation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_utilisateur', models.PositiveSmallIntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('aime', models.BooleanField(blank=True, null=True)),
                ('commentaire', models.TextField(blank=True)),
                ('date_feedback', models.DateTimeField(auto_now_add=True)),
                ('historique', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='recommandations.historiquerecommandation')),
            ],
            options={
                'db_table': 'recommandations_feedback',
            },
        ),
        migrations.AddIndex(
            model_name='historiquerecommandation',
            index=models.Index(fields=['utilisateur', 'date_creation'], name='recommandat_utilisa_0c710f_idx'),
        ),
        migrations.AddIndex(
            model_name='historiquerecommandation',
            index=models.Index(fields=['produit_recommande', 'score_confiance'], name='recommandat_produit_e9ffe1_idx'),
        ),
    ]
