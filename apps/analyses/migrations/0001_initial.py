# Generated by Django 4.2.7 on 2025-09-24 07:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('magasins', '0001_initial'),
        ('produits', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnalysePrix',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type_analyse', models.CharField(choices=[('comparaison_enseigne', 'Comparaison entre enseignes'), ('evolution_temporelle', 'Évolution temporelle des prix'), ('analyse_ecart', 'Analyse des écarts de prix'), ('prediction_tendance', 'Prédiction de tendance'), ('benchmark_categorie', 'Benchmark par catégorie')], max_length=50)),
                ('titre', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('parametres', models.JSONField(default=dict)),
                ('resultats', models.JSONField(default=dict)),
                ('metriques', models.JSONField(default=dict)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_maj', models.DateTimeField(auto_now=True)),
                ('date_debut_periode', models.DateField()),
                ('date_fin_periode', models.DateField()),
                ('utilisateur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Analyse de prix',
                'verbose_name_plural': 'Analyses de prix',
                'db_table': 'analyses_prix',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='IndicateurPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('valeur_actuelle', models.FloatField()),
                ('valeur_cible', models.FloatField()),
                ('unite', models.CharField(max_length=20)),
                ('tendance', models.CharField(choices=[('hausse', 'Hausse'), ('baisse', 'Baisse'), ('stable', 'Stable')], max_length=10)),
                ('date_calcul', models.DateTimeField(auto_now=True)),
                ('periode_mesure', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Indicateur de performance',
                'verbose_name_plural': 'Indicateurs de performance',
                'db_table': 'indicateurs_performance',
                'indexes': [models.Index(fields=['nom', 'date_calcul'], name='indicateurs_nom_c4c89f_idx')],
            },
        ),
        migrations.CreateModel(
            name='CacheAnalyse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cle_cache', models.CharField(max_length=255, unique=True)),
                ('donnees_cache', models.JSONField()),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_expiration', models.DateTimeField()),
                ('metadata', models.JSONField(default=dict)),
            ],
            options={
                'verbose_name': "Cache d'analyse",
                'verbose_name_plural': "Caches d'analyse",
                'db_table': 'cache_analyses',
                'indexes': [models.Index(fields=['cle_cache', 'date_expiration'], name='cache_analy_cle_cac_41e8d0_idx'), models.Index(fields=['date_expiration'], name='cache_analy_date_ex_dff1dd_idx')],
            },
        ),
        migrations.CreateModel(
            name='RapportAnalyse',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('format_rapport', models.CharField(choices=[('pdf', 'PDF'), ('excel', 'Excel'), ('csv', 'CSV'), ('json', 'JSON')], max_length=10)),
                ('fichier_rapport', models.FileField(blank=True, null=True, upload_to='rapports_analyses/')),
                ('configuration', models.JSONField(default=dict)),
                ('date_generation', models.DateTimeField(auto_now_add=True)),
                ('statut', models.CharField(choices=[('en_cours', 'En cours'), ('termine', 'Terminé'), ('erreur', 'Erreur')], default='en_cours', max_length=20)),
                ('analyse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rapports', to='analyses.analyseprix')),
            ],
            options={
                'verbose_name': "Rapport d'analyse",
                'verbose_name_plural': "Rapports d'analyse",
                'db_table': 'rapports_analyse',
                'indexes': [models.Index(fields=['analyse', 'date_generation'], name='rapports_an_analyse_bd7ae6_idx')],
            },
        ),
        migrations.CreateModel(
            name='PriceAggregate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fenetre_debut', models.DateTimeField()),
                ('fenetre_fin', models.DateTimeField()),
                ('prix_min', models.DecimalField(decimal_places=2, max_digits=12)),
                ('prix_max', models.DecimalField(decimal_places=2, max_digits=12)),
                ('prix_moyen', models.DecimalField(decimal_places=2, max_digits=12)),
                ('echantillons', models.PositiveIntegerField(default=0)),
                ('calcule_le', models.DateTimeField(auto_now_add=True)),
                ('categorie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='produits.categorie')),
                ('produit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='produits.produit')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='magasins.region')),
                ('ville', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='magasins.ville')),
            ],
            options={
                'verbose_name': 'Agrégat de prix',
                'verbose_name_plural': 'Agrégats de prix',
                'db_table': 'price_aggregates',
                'ordering': ['-fenetre_debut'],
                'indexes': [models.Index(fields=['produit', 'fenetre_debut', 'fenetre_fin'], name='price_aggre_produit_9e03ab_idx'), models.Index(fields=['categorie', 'fenetre_debut', 'fenetre_fin'], name='price_aggre_categor_7d4dfc_idx'), models.Index(fields=['ville', 'fenetre_debut', 'fenetre_fin'], name='price_aggre_ville_i_f2e010_idx'), models.Index(fields=['region', 'fenetre_debut', 'fenetre_fin'], name='price_aggre_region__c0930a_idx'), models.Index(fields=['fenetre_debut', 'fenetre_fin'], name='price_aggre_fenetre_d28b22_idx')],
            },
        ),
        migrations.CreateModel(
            name='AnalysisResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('tendance', 'Tendance'), ('prix', 'Analyse Prix'), ('recommandation', 'Recommandation')], max_length=32)),
                ('nom', models.CharField(max_length=150)),
                ('donnees', models.JSONField(blank=True, default=dict)),
                ('calcule_le', models.DateTimeField(auto_now_add=True)),
                ('ttl_seconds', models.PositiveIntegerField(default=3600)),
                ('categorie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='produits.categorie')),
                ('produit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='produits.produit')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='magasins.region')),
                ('ville', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='magasins.ville')),
            ],
            options={
                'verbose_name': "Résultat d'analyse",
                'verbose_name_plural': "Résultats d'analyse",
                'db_table': 'analysis_results',
                'ordering': ['-calcule_le'],
                'indexes': [models.Index(fields=['type', 'nom'], name='analysis_re_type_c7e34f_idx'), models.Index(fields=['produit'], name='analysis_re_produit_54e060_idx'), models.Index(fields=['categorie'], name='analysis_re_categor_8ba684_idx'), models.Index(fields=['ville'], name='analysis_re_ville_i_ee79e1_idx'), models.Index(fields=['region'], name='analysis_re_region__1f3c05_idx'), models.Index(fields=['calcule_le'], name='analysis_re_calcule_744339_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='analyseprix',
            index=models.Index(fields=['type_analyse', 'date_creation'], name='analyses_pr_type_an_ac65a5_idx'),
        ),
        migrations.AddIndex(
            model_name='analyseprix',
            index=models.Index(fields=['utilisateur', 'date_creation'], name='analyses_pr_utilisa_7b2b17_idx'),
        ),
        migrations.AddIndex(
            model_name='analyseprix',
            index=models.Index(fields=['date_debut_periode', 'date_fin_periode'], name='analyses_pr_date_de_422a1a_idx'),
        ),
    ]
