# Generated by Django 5.1.2 on 2025-10-01 15:38

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('magasins', '0003_remove_magasin_magasin_latitude_range_and_more'),
        ('produits', '0006_remove_comparaisonprix_magasin_prix_max_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name='categorie',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sous_categories', to='produits.categorie'),
        ),
        migrations.AlterField(
            model_name='historiqueprixproduit',
            name='prix_max',
            field=models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Prix maximum'),
        ),
        migrations.AlterField(
            model_name='historiqueprixproduit',
            name='prix_min',
            field=models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Prix minimum'),
        ),
        migrations.AlterField(
            model_name='historiqueprixproduit',
            name='prix_moyen',
            field=models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Prix moyen'),
        ),
        migrations.AlterField(
            model_name='produit',
            name='categorie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='produits', to='produits.categorie'),
        ),
        migrations.AlterField(
            model_name='produit',
            name='code_barre',
            field=models.CharField(db_index=True, max_length=20, unique=True, verbose_name='Code-barres'),
        ),
        migrations.AlterField(
            model_name='produit',
            name='marque',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='produits', to='produits.marque'),
        ),
        migrations.AlterField(
            model_name='produit',
            name='poids',
            field=models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True, verbose_name='Poids'),
        ),
        migrations.AlterField(
            model_name='produit',
            name='unite_mesure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='produits.unitemesure'),
        ),
        migrations.AlterField(
            model_name='produit',
            name='volume',
            field=models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True, verbose_name='Volume'),
        ),
        migrations.CreateModel(
            name='ComparaisonPrix',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_comparaison', models.DateTimeField(auto_now_add=True)),
                ('prix_minimum', models.DecimalField(decimal_places=2, max_digits=10)),
                ('prix_maximum', models.DecimalField(decimal_places=2, max_digits=10)),
                ('prix_moyen', models.DecimalField(decimal_places=2, max_digits=10)),
                ('nombre_magasins', models.PositiveIntegerField()),
                ('ecart_type', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('coefficient_variation', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('magasin_prix_max', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comparaisons_prix_max', to='magasins.magasin')),
                ('magasin_prix_min', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comparaisons_prix_min', to='magasins.magasin')),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comparaisons', to='produits.produit')),
            ],
            options={
                'verbose_name': 'Comparaison de prix',
                'verbose_name_plural': 'Comparaisons de prix',
                'ordering': ['-date_comparaison'],
            },
        ),
        migrations.CreateModel(
            name='HomologationProduit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255)),
                ('format', models.CharField(blank=True, max_length=120)),
                ('marque', models.CharField(blank=True, max_length=120)),
                ('categorie', models.CharField(default='Non classé', max_length=120)),
                ('sous_categorie', models.CharField(blank=True, max_length=120)),
                ('reference_titre', models.CharField(blank=True, max_length=255)),
                ('reference_numero', models.CharField(blank=True, max_length=120)),
                ('reference_url', models.CharField(blank=True, max_length=200)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Produit homologué (référence)',
                'verbose_name_plural': 'Produits homologués (référence)',
                'indexes': [models.Index(fields=['nom', 'marque'], name='produits_ho_nom_a65571_idx'), models.Index(fields=['categorie', 'sous_categorie'], name='produits_ho_categor_0ed097_idx')],
            },
        ),
        migrations.CreateModel(
            name='Prix',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prix_actuel', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Prix actuel')),
                ('prix_origine', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name="Prix d'origine")),
                ('cheapness_score', models.FloatField(blank=True, null=True)),
                ('popularity_count', models.IntegerField(default=0)),
                ('recommendation_score', models.FloatField(blank=True, null=True)),
                ('est_promotion', models.BooleanField(default=False, verbose_name='Est en promotion')),
                ('est_disponible', models.BooleanField(default=True, verbose_name='Est disponible')),
                ('quantite_stock', models.PositiveIntegerField(blank=True, null=True, verbose_name='Quantité en stock')),
                ('niveau_stock', models.CharField(default='disponible', max_length=20, verbose_name='Niveau de stock')),
                ('source_prix', models.CharField(default='scraping', max_length=50, verbose_name='Source du prix')),
                ('confiance_prix', models.DecimalField(decimal_places=2, default=1.0, max_digits=3, verbose_name='Niveau de confiance')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('magasin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prix', to='magasins.magasin')),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prix', to='produits.produit')),
            ],
            options={
                'verbose_name': 'Prix',
                'verbose_name_plural': 'Prix',
                'ordering': ['-date_modification'],
            },
        ),
        migrations.CreateModel(
            name='HistoriquePrix',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ancien_prix', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Ancien prix')),
                ('nouveau_prix', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Nouveau prix')),
                ('variation', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Variation')),
                ('pourcentage_variation', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Pourcentage de variation')),
                ('raison', models.CharField(choices=[('promotion', 'Promotion'), ('fin_promotion', 'Fin de promotion'), ('augmentation', 'Augmentation de prix'), ('reduction', 'Réduction de prix'), ('correction', 'Correction'), ('a_jour', 'Mise à jour')], default='a_jour', max_length=20, verbose_name='Raison du changement')),
                ('date_changement', models.DateTimeField(auto_now_add=True, verbose_name='Date du changement')),
                ('prix', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historique', to='produits.prix', verbose_name='Prix')),
            ],
            options={
                'verbose_name': 'Historique des prix',
                'verbose_name_plural': 'Historique des prix',
                'ordering': ['-date_changement'],
            },
        ),
        migrations.CreateModel(
            name='PrixHomologue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_publication', models.DateField(blank=True, null=True)),
                ('unite', models.CharField(blank=True, max_length=60)),
                ('prix_unitaire', models.DecimalField(decimal_places=2, max_digits=10)),
                ('prix_detail', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('prix_par_kilo', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('prix_gros', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('prix_demi_gros', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('periode_debut', models.DateField(blank=True, null=True)),
                ('periode_fin', models.DateField(blank=True, null=True)),
                ('localisation', models.CharField(blank=True, default='', max_length=60)),
                ('source', models.CharField(blank=True, default='', max_length=60)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prix_homologues', to='produits.homologationproduit')),
            ],
            options={
                'verbose_name': 'Prix homologué',
                'verbose_name_plural': 'Prix homologués',
                'ordering': ['-date_publication', '-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='SuggestionPrix',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prix_suggere', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date_observation', models.DateTimeField()),
                ('photo_preuve', models.ImageField(blank=True, null=True, upload_to='suggestions_preuve/')),
                ('commentaire', models.TextField(blank=True)),
                ('statut', models.CharField(choices=[('en_attente', 'En attente'), ('approuve', 'Approuvé'), ('rejete', 'Rejeté')], default='en_attente', max_length=20)),
                ('date_verification', models.DateTimeField(blank=True, null=True)),
                ('raison_rejet', models.CharField(blank=True, max_length=200)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('magasin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suggestions_prix', to='magasins.magasin')),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suggestions_prix', to='produits.produit')),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suggestions_prix', to=settings.AUTH_USER_MODEL)),
                ('verifie_par', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='suggestions_verifiees', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Suggestion de prix',
                'verbose_name_plural': 'Suggestions de prix',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='AlertePrix',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prix_souhaite', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('pourcentage_reduction', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('est_active', models.BooleanField(default=True)),
                ('frequence_verification', models.CharField(choices=[('quotidienne', 'Quotidienne'), ('hebdomadaire', 'Hebdomadaire'), ('mensuelle', 'Mensuelle')], default='quotidienne', max_length=20)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_derniere_alerte', models.DateTimeField(blank=True, null=True)),
                ('nombre_alertes_envoyees', models.PositiveIntegerField(default=0)),
                ('magasins', models.ManyToManyField(blank=True, related_name='alertes_prix', to='magasins.magasin')),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alertes_prix', to='produits.produit')),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alertes_prix', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Alerte de prix',
                'verbose_name_plural': 'Alertes de prix',
                'ordering': ['-date_creation'],
                'indexes': [models.Index(fields=['utilisateur', 'produit'], name='produits_al_utilisa_3fc332_idx'), models.Index(fields=['est_active'], name='produits_al_est_act_fb9122_idx')],
            },
        ),
        migrations.CreateModel(
            name='Offre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prix_actuel', models.DecimalField(decimal_places=2, max_digits=10)),
                ('prix_origine', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('est_promotion', models.BooleanField(default=False)),
                ('cheapness_score', models.FloatField(blank=True, null=True)),
                ('popularity_count', models.IntegerField(default=0)),
                ('recommendation_score', models.FloatField(blank=True, null=True)),
                ('source', models.CharField(default='scraping', max_length=30)),
                ('date_observation', models.DateTimeField(auto_now_add=True)),
                ('magasin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offres', to='magasins.magasin')),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offres', to='produits.produit')),
            ],
            options={
                'verbose_name': 'Offre',
                'verbose_name_plural': 'Offres',
                'indexes': [models.Index(fields=['produit', 'magasin'], name='produits_of_produit_43dd87_idx'), models.Index(fields=['est_promotion'], name='produits_of_est_pro_1e39c8_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='prix',
            index=models.Index(fields=['produit', 'magasin'], name='produits_pr_produit_3232e5_idx'),
        ),
        migrations.AddIndex(
            model_name='prix',
            index=models.Index(fields=['prix_actuel'], name='produits_pr_prix_ac_cd783f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='prix',
            unique_together={('produit', 'magasin')},
        ),
        migrations.AddIndex(
            model_name='prixhomologue',
            index=models.Index(fields=['produit', 'date_publication'], name='produits_pr_produit_5a1e34_idx'),
        ),
        migrations.AddIndex(
            model_name='prixhomologue',
            index=models.Index(fields=['localisation'], name='produits_pr_localis_24a6d8_idx'),
        ),
        migrations.AddIndex(
            model_name='suggestionprix',
            index=models.Index(fields=['produit', 'magasin'], name='produits_su_produit_311df8_idx'),
        ),
        migrations.AddIndex(
            model_name='suggestionprix',
            index=models.Index(fields=['statut'], name='produits_su_statut_e54c14_idx'),
        ),
    ]
