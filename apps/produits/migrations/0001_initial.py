# Generated by Django 4.2.7 on 2025-09-24 07:53

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AvisProduit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.PositiveSmallIntegerField(choices=[(1, '1 - Très mauvais'), (2, '2 - Mauvais'), (3, '3 - Moyen'), (4, '4 - Bon'), (5, '5 - Excellent')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Note')),
                ('titre', models.CharField(max_length=100, verbose_name="Titre de l'avis")),
                ('commentaire', models.TextField(blank=True, verbose_name='Commentaire')),
                ('est_verifie', models.BooleanField(default=False, verbose_name='Avis vérifié')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
            ],
            options={
                'verbose_name': 'Avis produit',
                'verbose_name_plural': 'Avis produits',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='CaracteristiqueProduit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom de la caractéristique')),
                ('valeur', models.CharField(max_length=200, verbose_name='Valeur')),
                ('ordre', models.PositiveIntegerField(default=0, verbose_name="Ordre d'affichage")),
            ],
            options={
                'verbose_name': 'Caractéristique produit',
                'verbose_name_plural': 'Caractéristiques produits',
                'ordering': ['ordre', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='Categorie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, unique=True, verbose_name='Nom')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('image', models.ImageField(blank=True, null=True, upload_to='categories/', verbose_name='Image')),
                ('ordre', models.PositiveIntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
            ],
            options={
                'verbose_name': 'Catégorie',
                'verbose_name_plural': 'Catégories',
                'ordering': ['ordre', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='HistoriquePrixProduit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date')),
                ('prix_moyen', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Prix moyen')),
                ('prix_min', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Prix minimum')),
                ('prix_max', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Prix maximum')),
                ('nombre_magasins', models.PositiveIntegerField(verbose_name='Nombre de magasins')),
            ],
            options={
                'verbose_name': 'Historique prix produit',
                'verbose_name_plural': 'Historique prix produits',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Marque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, unique=True, verbose_name='Nom')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='marques/', verbose_name='Logo')),
                ('site_web', models.URLField(blank=True, verbose_name='Site web')),
                ('pays_origine', models.CharField(blank=True, max_length=50, verbose_name="Pays d'origine")),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
            ],
            options={
                'verbose_name': 'Marque',
                'verbose_name_plural': 'Marques',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='UniteMesure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=20, unique=True, verbose_name='Nom')),
                ('symbole', models.CharField(max_length=10, unique=True, verbose_name='Symbole')),
                ('description', models.CharField(blank=True, max_length=100, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Unité de mesure',
                'verbose_name_plural': 'Unités de mesure',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='Produit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_barre', models.CharField(db_index=True, help_text='Code EAN/UPC du produit', max_length=20, unique=True, verbose_name='Code-barres')),
                ('nom', models.CharField(max_length=200, verbose_name='Nom du produit')),
                ('slug', models.SlugField(max_length=200, unique=True, verbose_name='Slug')),
                ('poids', models.DecimalField(blank=True, decimal_places=3, help_text='Poids en kilogrammes', max_digits=8, null=True, verbose_name='Poids')),
                ('volume', models.DecimalField(blank=True, decimal_places=3, help_text='Volume en litres', max_digits=8, null=True, verbose_name='Volume')),
                ('quantite_unite', models.DecimalField(decimal_places=3, default=1, max_digits=8, validators=[django.core.validators.MinValueValidator(0.001)], verbose_name='Quantité par unité')),
                ('energie_kcal', models.PositiveIntegerField(blank=True, null=True, verbose_name='Énergie (kcal)')),
                ('proteines_g', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Protéines (g)')),
                ('glucides_g', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Glucides (g)')),
                ('lipides_g', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Lipides (g)')),
                ('image_principale', models.ImageField(blank=True, null=True, upload_to='produits/', verbose_name='Image principale')),
                ('images_secondaires', models.JSONField(blank=True, default=list, verbose_name='Images secondaires')),
                ('est_actif', models.BooleanField(default=True, verbose_name='Est actif')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('categorie', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='produits', to='produits.categorie', verbose_name='Catégorie')),
            ],
            options={
                'verbose_name': 'Produit',
                'verbose_name_plural': 'Produits',
                'ordering': ['nom'],
            },
        ),
    ]
